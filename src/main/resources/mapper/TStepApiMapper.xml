<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.we.apiautomation.apitest.dao.TStepApiMapper">
    <resultMap id="BaseResultMap" type="com.we.apiautomation.apitest.model.TStepApi">
        <!--@mbg.generated-->
        <!--@Table t_step_api-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="testcase_id" jdbcType="BIGINT" property="testcaseId"/>
        <result column="source_id" jdbcType="BIGINT" property="sourceId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="method" jdbcType="VARCHAR" property="method"/>
        <result column="domain" jdbcType="VARCHAR" property="domain"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="api_params" jdbcType="LONGVARCHAR" property="apiParams"
                typeHandler="com.we.apiautomation.apitest.typehandler.ApiParamListTypeHandler"/>
        <result column="before_excs" jdbcType="LONGVARCHAR" property="beforeExcs"
                typeHandler="com.we.apiautomation.apitest.typehandler.ActionListTypeHandler"/>
        <result column="req_header" jdbcType="LONGVARCHAR" property="reqHeader"
                typeHandler="com.we.apiautomation.apitest.typehandler.HeaderListTypeHandler"/>
        <result column="req_query" jdbcType="LONGVARCHAR" property="reqQuery"
                typeHandler="com.we.apiautomation.apitest.typehandler.QueryListTypeHandler"/>
        <result column="req_body_data" jdbcType="LONGVARCHAR" property="reqBodyData"
                typeHandler="com.we.apiautomation.apitest.typehandler.BodyDataListTypeHandler"/>
        <result column="req_body_json" jdbcType="LONGVARCHAR" property="reqBodyJson"/>
        <result column="req_body_type" jdbcType="VARCHAR" property="reqBodyType"/>
        <result column="req_extract" jdbcType="LONGVARCHAR" property="reqExtract"
                typeHandler="com.we.apiautomation.apitest.typehandler.ExtractListTypeHandler"/>
        <result column="req_assert" jdbcType="LONGVARCHAR" property="reqAssert"
                typeHandler="com.we.apiautomation.apitest.typehandler.AssertListTypeHandler"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, `type`, testcase_id, source_id, `status`, `method`, `domain`, `path`,
        api_params, before_excs, req_header, req_query, req_body_data, req_body_json, req_body_type,
        req_extract, req_assert, create_by, create_time, update_by, update_time, sort
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_step_api
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from t_step_api
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.we.apiautomation.apitest.model.TStepApi"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_step_api (`name`, `type`, testcase_id,
        source_id, `status`, `method`,
        `domain`, `path`, api_params,
        before_excs,
        req_header,
        req_query,
        req_body_data,
        req_body_json, req_body_type, req_extract,
        req_assert,
        create_by, create_time, update_by,
        update_time, sort)
        values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{testcaseId,jdbcType=BIGINT},
        #{sourceId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR},
        #{domain,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
        #{apiParams,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ApiParamListTypeHandler},
        #{beforeExcs,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ActionListTypeHandler},
        #{reqHeader,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.HeaderListTypeHandler},
        #{reqQuery,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.QueryListTypeHandler},
        #{reqBodyData,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.BodyDataListTypeHandler},
        #{reqBodyJson,jdbcType=LONGVARCHAR}, #{reqBodyType,jdbcType=VARCHAR},
        #{reqExtract,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ExtractListTypeHandler},
        #{reqAssert,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.AssertListTypeHandler},
        #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP}, #{sort,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.we.apiautomation.apitest.model.TStepApi"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_step_api
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="testcaseId != null">
                testcase_id,
            </if>
            <if test="sourceId != null">
                source_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="method != null and method != ''">
                `method`,
            </if>
            <if test="domain != null and domain != ''">
                `domain`,
            </if>
            <if test="path != null and path != ''">
                `path`,
            </if>
            <if test="apiParams != null">
                api_params,
            </if>
            <if test="beforeExcs != null">
                before_excs,
            </if>
            <if test="reqHeader != null">
                req_header,
            </if>
            <if test="reqQuery != null">
                req_query,
            </if>
            <if test="reqBodyData != null">
                req_body_data,
            </if>
            <if test="reqBodyJson != null and reqBodyJson != ''">
                req_body_json,
            </if>
            <if test="reqBodyType != null and reqBodyType != ''">
                req_body_type,
            </if>
            <if test="reqExtract != null">
                req_extract,
            </if>
            <if test="reqAssert != null">
                req_assert,
            </if>
            <if test="createBy != null and createBy != ''">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="testcaseId != null">
                #{testcaseId,jdbcType=BIGINT},
            </if>
            <if test="sourceId != null">
                #{sourceId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="method != null and method != ''">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="domain != null and domain != ''">
                #{domain,jdbcType=VARCHAR},
            </if>
            <if test="path != null and path != ''">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="apiParams != null">
                #{apiParams,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ApiParamListTypeHandler},
            </if>
            <if test="beforeExcs != null">
                #{beforeExcs,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ActionListTypeHandler},
            </if>
            <if test="reqHeader != null">
                #{reqHeader,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.HeaderListTypeHandler},
            </if>
            <if test="reqQuery != null">
                #{reqQuery,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.QueryListTypeHandler},
            </if>
            <if test="reqBodyData != null">
                #{reqBodyData,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.BodyDataListTypeHandler},
            </if>
            <if test="reqBodyJson != null and reqBodyJson != ''">
                #{reqBodyJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="reqBodyType != null and reqBodyType != ''">
                #{reqBodyType,jdbcType=VARCHAR},
            </if>
            <if test="reqExtract != null">
                #{reqExtract,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ExtractListTypeHandler},
            </if>
            <if test="reqAssert != null">
                #{reqAssert,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.AssertListTypeHandler},
            </if>
            <if test="createBy != null and createBy != ''">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null and updateBy != ''">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.we.apiautomation.apitest.model.TStepApi">
        <!--@mbg.generated-->
        update t_step_api
        <set>
            <if test="name != null and name != ''">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="testcaseId != null">
                testcase_id = #{testcaseId,jdbcType=BIGINT},
            </if>
            <if test="sourceId != null">
                source_id = #{sourceId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="method != null and method != ''">
                `method` = #{method,jdbcType=VARCHAR},
            </if>
            <if test="domain != null and domain != ''">
                `domain` = #{domain,jdbcType=VARCHAR},
            </if>
            <if test="path != null and path != ''">
                `path` = #{path,jdbcType=VARCHAR},
            </if>
            <if test="apiParams != null">
                api_params =
                #{apiParams,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ApiParamListTypeHandler},
            </if>
            <if test="beforeExcs != null">
                before_excs =
                #{beforeExcs,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ActionListTypeHandler},
            </if>
            <if test="reqHeader != null">
                req_header = #{reqHeader,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.HeaderListTypeHandler},
            </if>
            <if test="reqQuery != null">
                req_query = #{reqQuery,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.QueryListTypeHandler},
            </if>
            <if test="reqBodyData != null">
                req_body_data =
                #{reqBodyData,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.BodyDataListTypeHandler},
            </if>
            <if test="reqBodyJson != null and reqBodyJson != ''">
                req_body_json = #{reqBodyJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="reqBodyType != null and reqBodyType != ''">
                req_body_type = #{reqBodyType,jdbcType=VARCHAR},
            </if>
            <if test="reqExtract != null">
                req_extract =
                #{reqExtract,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ExtractListTypeHandler},
            </if>
            <if test="reqAssert != null">
                req_assert = #{reqAssert,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.AssertListTypeHandler},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.we.apiautomation.apitest.model.TStepApi">
        <!--@mbg.generated-->
        update t_step_api
        set `name` = #{name,jdbcType=VARCHAR},
        `type` = #{type,jdbcType=INTEGER},
        testcase_id = #{testcaseId,jdbcType=BIGINT},
        source_id = #{sourceId,jdbcType=BIGINT},
        `status` = #{status,jdbcType=INTEGER},
        `method` = #{method,jdbcType=VARCHAR},
        `domain` = #{domain,jdbcType=VARCHAR},
        `path` = #{path,jdbcType=VARCHAR},
        api_params = #{apiParams,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ApiParamListTypeHandler},
        before_excs = #{beforeExcs,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ActionListTypeHandler},
        req_header = #{reqHeader,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.HeaderListTypeHandler},
        req_query = #{reqQuery,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.QueryListTypeHandler},
        req_body_data = #{reqBodyData,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.BodyDataListTypeHandler},
        req_body_json = #{reqBodyJson,jdbcType=LONGVARCHAR},
        req_body_type = #{reqBodyType,jdbcType=VARCHAR},
        req_extract = #{reqExtract,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.ExtractListTypeHandler},
        req_assert = #{reqAssert,jdbcType=LONGVARCHAR,typeHandler=com.we.apiautomation.apitest.typehandler.AssertListTypeHandler},
        create_by = #{createBy,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_by = #{updateBy,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        sort = #{sort,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-02-19-->
    <select id="findByTestcaseId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_step_api
        where testcase_id=#{testcaseId,jdbcType=BIGINT}
        order by sort
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-02-19-->
    <select id="findMaxSortByTestcaseId" resultType="java.lang.Integer">
        select max(sort) as maxsort
        from t_step_api
        where testcase_id=#{testcaseId,jdbcType=BIGINT}
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-02-20-->
    <delete id="deleteByTestcaseId">
        delete from t_step_api
        where testcase_id=#{testcaseId,jdbcType=BIGINT}
    </delete>

    <!--auto generated by MybatisCodeHelper on 2020-03-12-->
    <select id="findByTypeAndSourceId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_step_api
        where `type`=#{type,jdbcType=INTEGER} and source_id=#{sourceId,jdbcType=BIGINT}
    </select>

</mapper>
